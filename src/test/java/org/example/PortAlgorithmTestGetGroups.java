package org.example;

import junit.framework.TestCase;
import org.junit.Assert;

import java.util.Arrays;

public class PortAlgorithmTestGetGroups extends TestCase {
    String [] arrStr;
    int [][] arrActual;
    String strExpected;
    String strActual;
    public void testGetGroups001() {
        arrStr = new String[]{"1,3-5", "2", "3-4"};
        arrActual = PortAlgorithm.getGroups(arrStr);
        strActual = Arrays.deepToString(arrActual);
        strExpected = "[[4, 2, 4], [4, 2, 3], [3, 2, 4], [3, 2, 3], [5, 2, 4], [5, 2, 3], [1, 2, 3], [1, 2, 4]]";
        Assert.assertEquals(strExpected, strActual);
    }
    public void testGetGroups002() {
        arrStr = new String[]{"1,2,3", "5", "3-4"};
        arrActual = PortAlgorithm.getGroups(arrStr);
        strActual = Arrays.deepToString(arrActual);
        strExpected = "[[1, 5, 3], [1, 5, 4], [2, 5, 3], [3, 5, 4], [3, 5, 3], [2, 5, 4]]";
        Assert.assertEquals(strExpected, strActual);
    }
    public void testGetGroups003() {
        arrStr = new String[]{"1,2,3", "4-6"};
        arrActual = PortAlgorithm.getGroups(arrStr);
        strActual = Arrays.deepToString(arrActual);
        strExpected = "[[3, 5], [3, 4], [2, 4], [1, 4], [2, 6], [2, 5], [1, 5], [1, 6], [3, 6]]";
        Assert.assertEquals(strExpected, strActual);
    }
    public void testGetGroups004() {
        arrStr = new String[]{"1", "4-10"};
        arrActual = PortAlgorithm.getGroups(arrStr);
        strActual = Arrays.deepToString(arrActual);
        strExpected = "[[1, 8], [1, 9], [1, 10], [1, 4], [1, 5], [1, 6], [1, 7]]";
        Assert.assertEquals(strExpected, strActual);
    }
    public void testGetGroups005() {
        arrStr = new String[]{"1,2","3,4","5,6","7,8"};
        arrActual = PortAlgorithm.getGroups(arrStr);
        strActual = Arrays.deepToString(arrActual);
        strExpected = "[[1, 4, 6, 8], [2, 3, 6, 7], [1, 4, 6, 7], [2, 4, 6, 7], [2, 3, 6, 8], [2, 4, 6, 8], [1, 3, 5, 8], [1, 4, 5, 7], [1, 3, 5, 7], [1, 4, 5, 8], [2, 3, 5, 8], [2, 3, 5, 7], [2, 4, 5, 7], [2, 4, 5, 8], [1, 3, 6, 7], [1, 3, 6, 8]]";
        Assert.assertEquals(strExpected, strActual);
    }
    public void testGetGroups006() {
        arrStr = new String[]{"1,2","3,4","5,6","7,8","9-10"};
        arrActual = PortAlgorithm.getGroups(arrStr);
        strActual = Arrays.deepToString(arrActual);
        strExpected = "[[2, 4, 6, 7, 10], [1, 4, 5, 8, 10], [2, 3, 6, 8, 10], [1, 4, 5, 7, 9], [1, 3, 6, 8, 10], [2, 4, 5, 7, 9], [2, 4, 6, 7, 9], [1, 3, 5, 8, 10], [1, 4, 6, 7, 10], [1, 4, 6, 7, 9], [1, 4, 5, 7, 10], [1, 3, 6, 7, 10], [1, 4, 6, 8, 9], [2, 4, 6, 8, 9], [2, 4, 6, 8, 10], [2, 4, 5, 8, 9], [1, 4, 5, 8, 9], [2, 4, 5, 8, 10], [1, 3, 5, 7, 10], [2, 3, 6, 7, 9], [2, 3, 5, 7, 9], [2, 3, 5, 7, 10], [1, 3, 5, 7, 9], [1, 3, 6, 7, 9], [2, 3, 6, 7, 10], [1, 3, 5, 8, 9], [2, 3, 5, 8, 10], [1, 3, 6, 8, 9], [2, 4, 5, 7, 10], [1, 4, 6, 8, 10], [2, 3, 6, 8, 9], [2, 3, 5, 8, 9]]";
        Assert.assertEquals(strExpected, strActual);
    }
    public void testGetGroups007() {
        arrStr = new String[]{"1,2","3,4","5,6","7,8","9-10","11,12"};
        arrActual = PortAlgorithm.getGroups(arrStr);
        strActual = Arrays.deepToString(arrActual);
        strExpected = "[[1, 4, 6, 7, 10, 11], [1, 4, 5, 8, 9, 12], [2, 3, 5, 8, 9, 11], [1, 3, 5, 8, 9, 11], [1, 3, 6, 8, 10, 11], [1, 3, 6, 7, 9, 12], [2, 4, 5, 8, 9, 12], [1, 4, 5, 7, 10, 11], [2, 4, 5, 8, 10, 11], [1, 4, 6, 8, 9, 11], [2, 3, 5, 7, 10, 12], [2, 4, 6, 8, 10, 11], [1, 4, 5, 8, 10, 12], [1, 4, 6, 8, 10, 12], [2, 3, 6, 7, 9, 11], [2, 4, 6, 7, 9, 12], [2, 3, 6, 8, 10, 11], [1, 4, 5, 8, 9, 11], [2, 3, 5, 8, 10, 11], [1, 3, 6, 8, 9, 11], [2, 3, 5, 7, 9, 12], [1, 4, 6, 7, 9, 12], [2, 4, 5, 7, 9, 11], [2, 4, 5, 8, 10, 12], [2, 3, 5, 7, 10, 11], [2, 4, 6, 8, 10, 12], [1, 3, 5, 8, 10, 11], [2, 4, 6, 7, 10, 11], [1, 3, 5, 8, 9, 12], [1, 4, 6, 8, 10, 11], [1, 4, 5, 8, 10, 11], [2, 4, 5, 7, 10, 11], [2, 3, 6, 7, 9, 12], [2, 4, 6, 7, 9, 11], [1, 4, 5, 7, 9, 12], [2, 3, 5, 8, 10, 12], [2, 3, 6, 8, 10, 12], [1, 3, 6, 8, 9, 12], [2, 3, 5, 7, 9, 11], [2, 4, 5, 7, 9, 12], [1, 4, 6, 7, 9, 11], [2, 3, 6, 7, 10, 11], [1, 3, 6, 7, 10, 11], [2, 3, 6, 8, 9, 11], [1, 3, 5, 8, 10, 12], [2, 4, 6, 8, 9, 12], [2, 4, 5, 7, 10, 12], [1, 3, 5, 7, 9, 11], [1, 3, 5, 7, 10, 11], [2, 4, 6, 7, 10, 12], [1, 4, 6, 7, 10, 12], [2, 3, 5, 8, 9, 12], [1, 3, 6, 8, 10, 12], [1, 3, 6, 7, 9, 11], [1, 4, 6, 8, 9, 12], [1, 4, 5, 7, 10, 12], [2, 3, 6, 7, 10, 12], [1, 3, 6, 7, 10, 12], [2, 4, 5, 8, 9, 11], [2, 3, 6, 8, 9, 12], [2, 4, 6, 8, 9, 11], [1, 3, 5, 7, 9, 12], [1, 4, 5, 7, 9, 11], [1, 3, 5, 7, 10, 12]]";
        Assert.assertEquals(strExpected, strActual);
    }
    public void testGetGroups008() {
        arrStr = new String[]{"1,2","3,4","5,6","7,8","9-10","11,12","13,14"};
        arrActual = PortAlgorithm.getGroups(arrStr);
        strActual = Arrays.deepToString(arrActual);
        strExpected = "[[2, 4, 5, 7, 9, 12, 13], [2, 3, 5, 7, 9, 11, 13], [2, 4, 5, 8, 9, 12, 13], [1, 4, 5, 7, 9, 11, 13], [2, 3, 5, 8, 9, 11, 13], [1, 3, 6, 7, 10, 12, 14], [2, 3, 5, 8, 9, 12, 14], [1, 3, 6, 7, 10, 11, 13], [1, 3, 5, 7, 9, 11, 14], [1, 4, 5, 7, 9, 12, 14], [1, 4, 5, 8, 9, 12, 14], [1, 3, 5, 8, 9, 11, 14], [1, 4, 5, 8, 10, 12, 13], [2, 3, 6, 7, 10, 12, 14], [2, 3, 5, 7, 9, 12, 14], [2, 4, 5, 7, 9, 11, 13], [2, 3, 6, 7, 10, 11, 13], [1, 4, 5, 8, 9, 11, 14], [2, 4, 5, 8, 9, 11, 13], [1, 4, 5, 8, 10, 11, 13], [1, 3, 6, 7, 10, 12, 13], [2, 3, 5, 8, 9, 11, 14], [1, 3, 6, 8, 9, 12, 13], [1, 4, 5, 7, 9, 12, 13], [1, 4, 5, 8, 9, 12, 13], [1, 3, 6, 7, 9, 12, 13], [2, 3, 5, 7, 9, 11, 14], [2, 3, 6, 7, 10, 12, 13], [1, 4, 5, 8, 10, 12, 14], [2, 4, 5, 8, 10, 11, 13], [2, 4, 5, 7, 9, 11, 14], [1, 4, 6, 7, 9, 12, 13], [1, 4, 6, 8, 9, 12, 13], [2, 4, 5, 8, 9, 11, 14], [1, 4, 5, 8, 10, 11, 14], [1, 4, 6, 7, 9, 11, 13], [1, 4, 6, 8, 9, 11, 13], [1, 3, 6, 8, 9, 12, 14], [1, 4, 6, 7, 10, 11, 13], [2, 3, 5, 7, 10, 12, 14], [1, 3, 6, 7, 9, 12, 14], [2, 4, 6, 7, 10, 12, 14], [2, 3, 6, 7, 9, 12, 14], [2, 3, 6, 8, 9, 12, 14], [1, 3, 5, 8, 10, 12, 13], [2, 3, 5, 7, 10, 11, 14], [1, 3, 6, 8, 10, 12, 14], [2, 3, 6, 8, 10, 11, 13], [2, 4, 6, 8, 9, 11, 13], [2, 4, 5, 8, 9, 12, 14], [1, 4, 6, 7, 9, 11, 14], [1, 3, 6, 7, 10, 11, 14], [1, 3, 5, 7, 9, 11, 13], [1, 4, 6, 7, 10, 11, 14], [1, 4, 6, 8, 9, 11, 14], [1, 3, 5, 8, 9, 11, 13], [2, 4, 6, 7, 9, 11, 13], [2, 3, 5, 7, 10, 12, 13], [2, 4, 5, 7, 10, 12, 13], [2, 4, 5, 7, 9, 12, 14], [2, 3, 6, 8, 9, 12, 13], [2, 3, 6, 7, 9, 12, 13], [2, 4, 6, 8, 10, 11, 14], [2, 3, 6, 8, 10, 11, 14], [2, 4, 6, 8, 9, 11, 14], [1, 4, 6, 8, 10, 12, 14], [2, 4, 6, 7, 9, 11, 14], [1, 3, 5, 8, 10, 11, 14], [2, 3, 5, 8, 10, 12, 14], [1, 4, 5, 7, 10, 11, 14], [2, 4, 5, 7, 10, 12, 14], [1, 4, 6, 8, 10, 11, 13], [2, 4, 6, 8, 10, 12, 14], [2, 4, 5, 7, 10, 11, 14], [1, 3, 5, 7, 10, 12, 13], [2, 3, 5, 8, 10, 11, 14], [2, 4, 6, 8, 10, 11, 13], [1, 4, 5, 7, 10, 11, 13], [1, 4, 6, 8, 10, 12, 13], [1, 3, 5, 8, 10, 11, 13], [1, 4, 6, 7, 10, 12, 13], [1, 3, 5, 7, 10, 11, 13], [2, 4, 5, 7, 10, 11, 13], [2, 4, 6, 7, 10, 12, 13], [1, 3, 5, 7, 10, 12, 14], [2, 3, 5, 8, 10, 11, 13], [2, 3, 6, 8, 10, 12, 13], [2, 3, 5, 7, 10, 11, 13], [2, 4, 6, 8, 10, 12, 13], [1, 3, 5, 8, 10, 12, 14], [2, 3, 6, 8, 9, 11, 14], [1, 3, 6, 8, 10, 12, 13], [1, 4, 5, 7, 10, 12, 14], [2, 3, 6, 7, 9, 11, 14], [1, 4, 6, 7, 10, 12, 14], [1, 3, 5, 7, 10, 11, 14], [2, 4, 5, 8, 10, 12, 14], [1, 3, 6, 8, 10, 11, 13], [1, 3, 5, 7, 9, 12, 13], [1, 3, 6, 8, 9, 11, 14], [2, 4, 5, 8, 10, 11, 14], [1, 3, 6, 7, 9, 11, 14], [1, 3, 5, 8, 9, 12, 13], [1, 4, 6, 7, 9, 12, 14], [2, 3, 6, 8, 10, 12, 14], [2, 4, 6, 8, 9, 12, 13], [2, 3, 6, 8, 9, 11, 13], [2, 4, 6, 7, 10, 11, 13], [1, 4, 5, 7, 10, 12, 13], [2, 3, 6, 7, 9, 11, 13], [2, 4, 6, 7, 9, 12, 13], [1, 4, 6, 8, 9, 12, 14], [2, 3, 5, 8, 10, 12, 13], [1, 4, 5, 7, 9, 11, 14], [1, 4, 6, 8, 10, 11, 14], [2, 3, 5, 8, 9, 12, 13], [2, 4, 5, 8, 10, 12, 13], [1, 3, 6, 8, 10, 11, 14], [1, 3, 6, 8, 9, 11, 13], [1, 3, 5, 8, 9, 12, 14], [2, 3, 5, 7, 9, 12, 13], [2, 4, 6, 8, 9, 12, 14], [1, 4, 5, 8, 9, 11, 13], [2, 4, 6, 7, 10, 11, 14], [2, 3, 6, 7, 10, 11, 14], [2, 4, 6, 7, 9, 12, 14], [1, 3, 6, 7, 9, 11, 13], [1, 3, 5, 7, 9, 12, 14]]";
        Assert.assertEquals(strExpected, strActual);
    }
    public void testGetGroups009() {
        arrStr = new String[]{null,"3,4","5,6","7,8","9-10","11,12","13,14"};
        arrActual = PortAlgorithm.getGroups(arrStr);
        strActual = Arrays.deepToString(arrActual);
        int [][] tmp = null;
        strExpected = Arrays.deepToString(tmp);
        Assert.assertEquals(strExpected, strActual);
    }
    public void testGetGroups010() {
        arrStr = new String[]{"","3,4","5,6","7,8","9-10","11,12","13,14"};
        arrActual = PortAlgorithm.getGroups(arrStr);
        strActual = Arrays.deepToString(arrActual);
        int [][] tmp = null;
        strExpected = Arrays.deepToString(tmp);
        Assert.assertEquals(strExpected, strActual);
    }
    public void testGetGroups011() {
        arrStr = new String[]{"1,2","3,4"};
        arrActual = PortAlgorithm.getGroups(arrStr);
        strActual = Arrays.deepToString(arrActual);
        strExpected = "[[2, 4], [2, 3], [1, 3], [1, 4]]";
        Assert.assertEquals(strExpected, strActual);
    }
    public void testGetGroups012() {
        arrStr = new String[]{"1,2", "4-5", "200-500"};
        arrActual = PortAlgorithm.getGroups(arrStr);
        strActual = Arrays.deepToString(arrActual);
        strExpected = "[[2, 5, 302], [2, 5, 411], [2, 5, 326], [2, 5, 435], [2, 5, 459], [2, 5, 217], [2, 4, 276], [2, 4, 385], [2, 4, 494], [2, 4, 252], [2, 4, 361], [2, 4, 470], [1, 4, 488], [1, 4, 246], [1, 4, 379], [1, 5, 429], [1, 4, 440], [1, 4, 331], [1, 5, 405], [1, 4, 464], [1, 4, 355], [1, 4, 222], [2, 5, 434], [2, 5, 301], [2, 5, 216], [2, 5, 458], [2, 5, 325], [2, 5, 349], [2, 4, 277], [2, 4, 386], [2, 4, 253], [2, 4, 362], [2, 4, 495], [2, 4, 471], [2, 5, 410], [1, 4, 269], [1, 4, 378], [1, 4, 330], [1, 4, 221], [1, 4, 463], [1, 4, 245], [1, 4, 354], [1, 4, 487], [1, 5, 406], [2, 5, 413], [2, 5, 304], [2, 5, 328], [2, 5, 437], [2, 5, 219], [2, 4, 298], [2, 4, 274], [2, 4, 492], [2, 4, 383], [2, 4, 250], [1, 4, 268], [1, 5, 403], [1, 4, 462], [1, 5, 209], [1, 4, 220], [1, 4, 353], [1, 5, 427], [1, 4, 486], [1, 5, 318], [1, 4, 244], [1, 4, 377], [2, 5, 412], [2, 5, 303], [2, 5, 436], [2, 5, 218], [2, 5, 327], [2, 4, 299], [2, 4, 275], [2, 4, 384], [2, 4, 251], [2, 4, 360], [2, 4, 493], [1, 5, 404], [1, 4, 461], [1, 4, 243], [1, 5, 319], [1, 4, 352], [1, 4, 485], [1, 4, 267], [1, 4, 376], [1, 5, 428], [2, 5, 500], [2, 5, 306], [2, 5, 415], [2, 5, 439], [2, 4, 498], [2, 4, 389], [2, 4, 256], [2, 4, 365], [2, 4, 232], [2, 4, 474], [2, 4, 341], [2, 4, 450], [1, 5, 425], [1, 5, 316], [1, 5, 401], [1, 4, 460], [1, 4, 351], [1, 4, 484], [1, 4, 375], [1, 4, 242], [1, 5, 449], [1, 4, 266], [1, 4, 399], [1, 5, 207], [2, 5, 414], [2, 5, 438], [2, 5, 305], [2, 4, 257], [2, 5, 329], [2, 4, 366], [2, 4, 499], [2, 4, 475], [2, 4, 233], [2, 4, 342], [2, 4, 451], [1, 5, 426], [1, 4, 350], [1, 4, 241], [1, 5, 402], [1, 4, 483], [1, 4, 374], [1, 4, 265], [1, 5, 317], [1, 5, 208], [1, 4, 398], [1, 4, 289], [2, 5, 308], [2, 5, 417], [2, 4, 278], [2, 4, 496], [2, 4, 387], [2, 4, 254], [2, 4, 363], [2, 4, 230], [2, 4, 472], [1, 5, 447], [1, 5, 205], [2, 5, 309], [1, 5, 338], [1, 4, 482], [1, 5, 423], [1, 4, 240], [1, 5, 314], [1, 4, 373], [1, 4, 397], [1, 4, 264], [1, 4, 288], [1, 5, 229], [2, 5, 416], [2, 4, 279], [2, 5, 307], [2, 4, 388], [2, 4, 255], [2, 4, 497], [2, 4, 364], [2, 4, 231], [2, 4, 473], [2, 4, 340], [1, 5, 400], [1, 5, 206], [1, 5, 315], [1, 5, 448], [1, 4, 481], [1, 4, 263], [1, 4, 372], [1, 5, 424], [1, 4, 287], [1, 4, 396], [1, 5, 339], [2, 4, 292], [1, 4, 400], [1, 4, 424], [1, 4, 315], [1, 5, 421], [1, 4, 448], [1, 5, 312], [1, 4, 339], [1, 4, 206], [1, 5, 469], [1, 5, 227], [1, 5, 445], [1, 5, 203], [1, 5, 336], [2, 5, 418], [2, 4, 293], [1, 4, 423], [1, 4, 314], [1, 4, 205], [1, 4, 447], [1, 4, 229], [1, 4, 338], [1, 5, 422], [1, 5, 337], [2, 5, 419], [1, 5, 228], [1, 5, 204], [1, 5, 313], [1, 5, 446], [1, 4, 422], [1, 4, 313], [2, 4, 290], [1, 4, 446], [1, 4, 204], [1, 4, 337], [1, 5, 443], [1, 5, 201], [1, 4, 228], [1, 5, 334], [1, 5, 310], [1, 5, 249], [1, 5, 467], [1, 5, 225], [1, 5, 358], [2, 4, 409], [1, 4, 203], [1, 4, 312], [2, 4, 291], [1, 4, 445], [1, 4, 227], [1, 4, 336], [1, 4, 469], [1, 5, 311], [1, 5, 202], [1, 5, 444], [1, 5, 420], [1, 5, 359], [1, 5, 226], [1, 5, 335], [1, 5, 468], [1, 4, 421], [2, 4, 296], [2, 4, 272], [2, 4, 381], [2, 4, 490], [1, 4, 444], [1, 4, 335], [1, 4, 202], [1, 4, 468], [1, 4, 226], [1, 4, 359], [1, 5, 465], [1, 5, 223], [1, 5, 356], [1, 5, 441], [2, 5, 281], [2, 5, 390], [1, 5, 332], [1, 5, 489], [1, 5, 247], [1, 4, 420], [1, 4, 311], [2, 4, 297], [2, 4, 273], [2, 4, 382], [2, 4, 491], [1, 4, 334], [1, 4, 225], [1, 4, 467], [1, 4, 249], [1, 4, 358], [1, 5, 224], [1, 5, 333], [1, 5, 466], [1, 5, 200], [2, 5, 280], [1, 5, 442], [1, 5, 248], [1, 5, 357], [1, 4, 201], [1, 4, 310], [1, 4, 443], [2, 5, 283], [2, 5, 392], [2, 4, 294], [2, 4, 270], [1, 4, 466], [1, 4, 224], [1, 5, 330], [1, 4, 357], [1, 4, 248], [1, 5, 487], [1, 5, 245], [1, 5, 378], [1, 5, 463], [1, 5, 354], [1, 5, 221], [1, 5, 269], [1, 4, 442], [1, 4, 200], [1, 4, 333], [2, 5, 282], [2, 4, 295], [2, 4, 271], [2, 4, 380], [1, 4, 356], [1, 4, 247], [1, 4, 489], [1, 5, 440], [1, 5, 246], [1, 5, 355], [1, 5, 488], [1, 5, 331], [1, 5, 222], [2, 5, 391], [1, 5, 464], [1, 5, 379], [1, 4, 441], [1, 4, 223], [1, 4, 332], [1, 4, 465], [2, 4, 317], [2, 4, 426], [2, 4, 402], [2, 5, 261], [2, 5, 370], [2, 5, 285], [2, 5, 394], [1, 5, 461], [1, 5, 352], [1, 5, 267], [1, 5, 485], [1, 5, 243], [1, 5, 376], [2, 4, 207], [2, 4, 318], [2, 4, 427], [2, 4, 403], [2, 5, 393], [2, 5, 260], [2, 5, 284], [1, 5, 220], [1, 5, 462], [1, 5, 268], [1, 5, 377], [1, 5, 244], [1, 5, 353], [1, 5, 486], [2, 4, 206], [2, 4, 319], [2, 4, 339], [2, 4, 448], [2, 4, 315], [2, 4, 424], [2, 4, 400], [1, 4, 419], [2, 5, 481], [2, 5, 263], [2, 5, 372], [2, 5, 287], [2, 5, 396], [1, 5, 483], [1, 5, 374], [1, 5, 241], [1, 5, 350], [1, 5, 289], [1, 5, 398], [1, 4, 418], [1, 5, 265], [2, 4, 209], [2, 4, 449], [2, 4, 316], [2, 4, 425], [2, 4, 401], [2, 5, 371], [2, 5, 480], [1, 4, 309], [2, 5, 395], [2, 5, 262], [2, 5, 286], [1, 5, 351], [1, 5, 242], [1, 5, 484], [1, 5, 460], [1, 5, 399], [1, 5, 266], [1, 4, 417], [1, 5, 375], [1, 4, 308], [2, 4, 208], [2, 4, 406], [2, 5, 241], [2, 5, 350], [2, 5, 483], [2, 5, 265], [2, 5, 374], [2, 5, 289], [2, 5, 398], [1, 5, 263], [1, 5, 396], [1, 5, 481], [1, 5, 372], [1, 4, 416], [1, 4, 307], [1, 5, 287], [2, 4, 407], [2, 5, 373], [2, 5, 482], [2, 5, 240], [2, 5, 397], [2, 5, 264], [2, 5, 288], [1, 5, 373], [1, 5, 264], [1, 4, 500], [1, 5, 240], [1, 5, 482], [1, 4, 415], [1, 4, 306], [1, 5, 397], [1, 4, 439], [1, 5, 288], [2, 4, 408], [2, 4, 428], [2, 4, 404], [2, 5, 461], [2, 5, 243], [1, 5, 370], [2, 5, 352], [2, 5, 485], [2, 5, 267], [2, 5, 376], [1, 5, 285], [1, 5, 261], [1, 5, 394], [1, 4, 414], [1, 4, 305], [1, 4, 438], [1, 4, 329], [2, 4, 429], [2, 4, 405], [2, 5, 351], [2, 5, 460], [2, 5, 484], [2, 5, 375], [2, 5, 242], [1, 5, 480], [2, 5, 399], [2, 5, 266], [1, 5, 286], [1, 5, 395], [1, 5, 262], [1, 5, 371], [1, 4, 413], [1, 4, 304], [1, 4, 437], [1, 4, 328], [1, 4, 219], [2, 5, 269], [2, 5, 378], [2, 4, 248], [2, 4, 357], [2, 4, 224], [2, 4, 466], [2, 4, 333], [2, 4, 442], [2, 5, 221], [2, 5, 463], [2, 5, 330], [1, 5, 392], [2, 5, 245], [2, 5, 487], [2, 5, 354], [1, 5, 283], [1, 4, 480], [1, 4, 371], [1, 4, 262], [1, 4, 395], [1, 4, 286], [2, 5, 268], [2, 4, 249], [2, 4, 358], [2, 4, 225], [2, 4, 467], [2, 4, 334], [2, 4, 443], [2, 4, 310], [1, 5, 260], [2, 5, 462], [2, 5, 353], [2, 5, 220], [2, 5, 377], [2, 5, 486], [2, 5, 244], [1, 5, 393], [1, 5, 284], [1, 4, 261], [1, 4, 370], [1, 4, 285], [1, 4, 394], [2, 5, 247], [2, 5, 356], [2, 5, 489], [2, 4, 379], [2, 4, 246], [2, 4, 488], [2, 4, 355], [2, 4, 222], [2, 4, 464], [2, 4, 331], [2, 4, 440], [2, 5, 441], [1, 5, 281], [2, 5, 223], [2, 5, 332], [1, 5, 390], [2, 5, 465], [2, 4, 201], [1, 4, 260], [1, 4, 393], [1, 4, 284], [2, 5, 379], [2, 5, 488], [2, 5, 246], [2, 4, 489], [2, 4, 247], [2, 4, 356], [2, 4, 465], [2, 4, 223], [2, 4, 332], [2, 4, 441], [2, 5, 331], [1, 5, 282], [2, 5, 440], [1, 5, 391], [2, 5, 464], [2, 5, 355], [2, 5, 222], [2, 4, 200], [1, 4, 283], [1, 4, 392], [2, 5, 225], [2, 5, 334], [2, 5, 467], [2, 5, 249], [2, 4, 228], [2, 4, 337], [2, 5, 358], [2, 4, 446], [2, 4, 313], [2, 4, 422], [1, 4, 391], [2, 5, 201], [2, 5, 310], [2, 5, 443], [1, 4, 282], [2, 4, 203], [2, 5, 357], [2, 5, 466], [2, 5, 224], [2, 4, 229], [2, 4, 338], [2, 5, 248], [2, 4, 447], [2, 4, 314], [2, 4, 423], [1, 4, 281], [1, 4, 390], [1, 5, 280], [2, 5, 333], [2, 5, 442], [2, 5, 200], [2, 4, 202], [2, 5, 203], [2, 5, 445], [2, 5, 312], [2, 5, 227], [2, 5, 469], [2, 5, 336], [2, 4, 359], [2, 4, 226], [2, 4, 468], [2, 4, 335], [2, 4, 444], [1, 4, 280], [2, 4, 311], [2, 4, 420], [2, 5, 421], [2, 4, 205], [1, 5, 419], [2, 5, 444], [2, 5, 335], [2, 5, 202], [2, 5, 359], [2, 5, 468], [2, 4, 227], [2, 4, 469], [2, 5, 226], [2, 4, 336], [2, 4, 445], [2, 4, 312], [2, 4, 421], [2, 5, 311], [2, 5, 420], [2, 4, 204], [2, 5, 423], [2, 5, 205], [2, 5, 314], [2, 5, 447], [2, 5, 229], [2, 5, 338], [2, 4, 288], [2, 4, 397], [2, 4, 264], [2, 4, 373], [2, 4, 240], [2, 4, 482], [1, 4, 258], [1, 4, 367], [1, 4, 210], [1, 5, 308], [1, 4, 452], [1, 4, 234], [1, 4, 343], [1, 4, 476], [1, 5, 417], [2, 5, 313], [2, 5, 422], [2, 5, 337], [2, 5, 446], [2, 5, 204], [2, 5, 228], [2, 4, 289], [2, 4, 398], [2, 4, 265], [2, 4, 374], [2, 4, 483], [2, 4, 241], [2, 4, 350], [1, 4, 499], [1, 4, 257], [1, 5, 418], [1, 4, 451], [1, 4, 342], [1, 5, 309], [1, 4, 475], [1, 4, 233], [1, 4, 366], [2, 5, 401], [2, 5, 425], [2, 5, 207], [2, 5, 316], [2, 5, 449], [2, 4, 286], [2, 4, 395], [2, 4, 262], [2, 4, 371], [2, 4, 480], [1, 4, 389], [1, 5, 415], [1, 5, 500], [1, 4, 450], [1, 4, 232], [1, 4, 341], [1, 4, 474], [1, 5, 306], [1, 4, 365], [1, 4, 256], [1, 5, 439], [1, 4, 498], [2, 5, 400], [2, 5, 424], [2, 5, 315], [2, 5, 339], [2, 5, 448], [2, 5, 206], [2, 4, 287], [2, 4, 396], [2, 4, 263], [2, 4, 372], [2, 4, 481], [1, 4, 279], [1, 4, 340], [1, 4, 473], [1, 4, 364], [1, 4, 231], [1, 5, 416], [1, 4, 497], [1, 4, 388], [1, 5, 307], [1, 4, 255], [2, 5, 403], [2, 5, 427], [2, 5, 209], [2, 4, 268], [2, 5, 318], [2, 4, 377], [2, 4, 244], [2, 4, 353], [2, 4, 486], [2, 4, 220], [2, 4, 462], [1, 5, 304], [1, 5, 437], [1, 4, 230], [1, 5, 413], [1, 4, 472], [1, 4, 363], [1, 4, 254], [1, 4, 496], [1, 4, 278], [1, 5, 328], [1, 4, 387], [1, 5, 219], [2, 5, 402], [2, 5, 317], [2, 5, 426], [2, 4, 269], [2, 4, 378], [2, 4, 487], [2, 5, 208], [2, 4, 245], [2, 4, 354], [2, 4, 463], [2, 4, 221], [2, 4, 330], [1, 5, 414], [1, 5, 305], [1, 4, 471], [1, 4, 362], [1, 4, 495], [1, 4, 253], [1, 4, 386], [1, 5, 438], [1, 4, 277], [1, 5, 329], [2, 5, 405], [2, 4, 399], [2, 5, 429], [2, 4, 266], [2, 4, 375], [2, 4, 242], [2, 4, 351], [2, 4, 484], [2, 4, 460], [1, 5, 411], [1, 5, 217], [1, 5, 326], [1, 4, 470], [1, 5, 459], [1, 4, 252], [1, 5, 302], [1, 4, 361], [1, 5, 435], [1, 4, 494], [1, 4, 385], [1, 4, 276], [2, 5, 404], [2, 5, 319], [2, 5, 428], [2, 4, 267], [2, 4, 376], [2, 4, 485], [2, 4, 243], [2, 4, 352], [2, 4, 461], [1, 5, 436], [1, 4, 360], [1, 5, 327], [1, 5, 412], [1, 4, 493], [1, 4, 251], [1, 5, 303], [1, 4, 384], [1, 4, 275], [1, 5, 218], [1, 4, 299], [2, 5, 407], [2, 4, 280], [1, 4, 412], [1, 4, 303], [1, 4, 436], [1, 4, 218], [1, 5, 300], [1, 4, 327], [1, 5, 433], [1, 5, 348], [2, 5, 408], [1, 5, 239], [1, 5, 215], [1, 5, 324], [1, 5, 457], [2, 5, 406], [2, 4, 281], [1, 4, 302], [2, 4, 390], [1, 4, 411], [1, 4, 435], [1, 4, 326], [1, 5, 410], [1, 4, 459], [1, 4, 217], [1, 5, 301], [1, 5, 458], [1, 5, 216], [1, 5, 349], [1, 5, 434], [1, 5, 325], [1, 4, 301], [1, 4, 434], [1, 4, 325], [1, 4, 216], [1, 4, 458], [1, 5, 322], [1, 4, 349], [1, 5, 213], [1, 5, 455], [2, 5, 291], [1, 5, 431], [1, 5, 237], [1, 5, 346], [1, 5, 479], [1, 4, 410], [1, 4, 433], [1, 4, 324], [1, 4, 457], [1, 4, 215], [1, 4, 348], [2, 5, 290], [1, 5, 432], [1, 4, 239], [1, 5, 323], [1, 5, 238], [2, 5, 409], [1, 5, 456], [1, 5, 347], [1, 5, 214], [1, 4, 300], [2, 5, 293], [2, 4, 284], [2, 4, 393], [2, 4, 260], [1, 4, 214], [1, 4, 323], [1, 4, 456], [1, 4, 238], [1, 4, 347], [1, 5, 235], [1, 5, 344], [1, 5, 477], [1, 5, 211], [1, 5, 320], [1, 5, 453], [1, 5, 368], [1, 5, 259], [1, 4, 432], [2, 4, 285], [2, 4, 394], [2, 4, 261], [2, 4, 370], [1, 4, 455], [1, 4, 213], [1, 4, 346], [1, 4, 479], [1, 4, 237], [1, 5, 454], [1, 5, 212], [1, 5, 345], [2, 5, 292], [1, 5, 430], [1, 5, 321], [1, 5, 478], [1, 5, 369], [1, 5, 236], [1, 4, 431], [1, 4, 322], [2, 5, 271], [2, 5, 295], [2, 4, 282], [2, 4, 391], [1, 4, 345], [1, 4, 236], [1, 5, 451], [1, 4, 478], [1, 4, 369], [1, 5, 257], [1, 5, 366], [1, 5, 499], [1, 5, 233], [1, 5, 342], [2, 5, 380], [1, 5, 475], [1, 4, 430], [1, 4, 212], [1, 4, 321], [1, 4, 454], [2, 5, 294], [2, 4, 283], [2, 4, 392], [1, 4, 477], [1, 4, 235], [1, 4, 368], [1, 4, 259], [1, 5, 476], [1, 5, 234], [1, 5, 367], [2, 5, 270], [1, 5, 452], [1, 5, 210], [1, 5, 343], [1, 5, 258], [1, 4, 320], [1, 4, 453], [1, 4, 211], [1, 4, 344], [2, 4, 329], [2, 4, 438], [2, 4, 305], [2, 4, 414], [1, 4, 290], [2, 5, 382], [2, 5, 491], [1, 4, 409], [2, 5, 273], [2, 5, 297], [1, 5, 340], [1, 5, 231], [1, 5, 473], [1, 5, 279], [1, 5, 388], [1, 5, 364], [1, 5, 255], [1, 5, 497], [2, 4, 439], [2, 4, 306], [2, 4, 415], [2, 4, 500], [2, 5, 272], [1, 4, 408], [2, 5, 381], [2, 5, 296], [1, 5, 450], [1, 5, 341], [1, 5, 498], [1, 5, 389], [1, 5, 256], [1, 5, 474], [1, 5, 232], [1, 4, 407], [1, 5, 365], [2, 5, 490], [2, 4, 218], [2, 4, 327], [2, 4, 436], [2, 4, 303], [2, 4, 412], [2, 5, 360], [2, 5, 384], [2, 5, 493], [2, 5, 251], [2, 5, 275], [2, 5, 299], [1, 5, 253], [1, 5, 362], [1, 5, 495], [1, 5, 471], [1, 5, 277], [1, 5, 386], [1, 4, 406], [2, 4, 219], [2, 4, 328], [2, 4, 437], [2, 4, 304], [2, 4, 413], [2, 5, 250], [2, 5, 492], [2, 5, 274], [2, 5, 383], [2, 5, 298], [1, 5, 472], [1, 5, 363], [1, 5, 230], [1, 4, 405], [1, 5, 278], [1, 5, 496], [1, 5, 254], [1, 5, 387], [1, 4, 429], [2, 5, 362], [2, 5, 471], [2, 5, 386], [2, 5, 495], [2, 5, 253], [2, 5, 277], [1, 5, 384], [1, 5, 275], [1, 5, 251], [1, 5, 360], [1, 5, 493], [1, 4, 404], [1, 4, 428], [1, 5, 299], [1, 4, 319], [2, 4, 419], [2, 5, 470], [2, 5, 252], [2, 5, 494], [2, 5, 361], [2, 5, 276], [2, 5, 385], [1, 5, 494], [1, 5, 252], [1, 5, 385], [1, 5, 470], [1, 4, 403], [1, 5, 361], [1, 4, 427], [1, 4, 209], [1, 4, 318], [1, 5, 276], [2, 4, 307], [2, 5, 279], [2, 4, 416], [2, 5, 340], [2, 5, 473], [2, 5, 364], [2, 5, 231], [1, 5, 491], [2, 5, 497], [2, 5, 388], [2, 5, 255], [1, 5, 297], [1, 5, 273], [1, 5, 382], [1, 4, 402], [1, 4, 426], [1, 4, 317], [1, 4, 208], [2, 4, 308], [2, 4, 417], [2, 5, 230], [2, 5, 472], [2, 5, 254], [2, 5, 363], [2, 5, 496], [2, 5, 278], [2, 5, 387], [1, 5, 274], [1, 4, 401], [1, 5, 492], [1, 5, 383], [1, 5, 250], [1, 4, 425], [1, 4, 316], [1, 4, 207], [1, 4, 449], [1, 5, 298], [2, 4, 309], [2, 4, 418], [2, 5, 499], [2, 5, 257], [2, 4, 478], [2, 4, 369], [2, 4, 236], [2, 4, 345], [2, 4, 212], [2, 4, 454], [2, 4, 321], [2, 4, 430], [1, 5, 271], [2, 5, 342], [1, 5, 380], [2, 5, 451], [2, 5, 366], [2, 5, 475], [2, 5, 233], [1, 5, 295], [1, 4, 250], [1, 4, 492], [1, 4, 274], [1, 4, 383], [1, 4, 298], [2, 5, 389], [2, 4, 237], [2, 4, 479], [2, 4, 346], [2, 4, 213], [2, 4, 455], [2, 4, 322], [2, 4, 431], [2, 5, 450], [1, 5, 490], [2, 5, 232], [1, 5, 381], [2, 5, 474], [2, 5, 341], [2, 5, 256], [2, 5, 365], [2, 5, 498], [1, 5, 296], [1, 5, 272], [1, 4, 491], [1, 4, 382], [1, 4, 273], [1, 4, 297], [2, 5, 368], [2, 5, 477], [2, 5, 235], [2, 5, 259], [2, 4, 258], [2, 4, 367], [2, 4, 476], [1, 4, 490], [2, 4, 234], [2, 4, 343], [2, 4, 452], [2, 4, 210], [1, 5, 293], [2, 5, 320], [2, 5, 344], [2, 5, 453], [2, 5, 211], [1, 4, 272], [1, 4, 381], [1, 4, 296], [2, 5, 258], [2, 5, 367], [2, 4, 259], [2, 4, 368], [2, 4, 235], [2, 4, 344], [1, 4, 380], [2, 4, 477], [2, 4, 211], [2, 4, 453], [2, 4, 320], [2, 5, 210], [2, 5, 452], [1, 5, 270], [2, 5, 234], [2, 5, 343], [2, 5, 476], [1, 5, 294], [1, 4, 271], [1, 4, 295], [2, 5, 455], [2, 5, 346], [2, 5, 213], [2, 5, 479], [2, 4, 349], [2, 4, 216], [2, 4, 458], [2, 5, 237], [2, 4, 325], [2, 4, 434], [1, 4, 270], [2, 4, 301], [2, 4, 410], [1, 5, 291], [2, 5, 322], [2, 5, 431], [1, 4, 294], [2, 5, 236], [2, 5, 345], [2, 5, 478], [2, 4, 217], [2, 4, 459], [2, 4, 326], [2, 5, 369], [2, 4, 435], [2, 4, 302], [2, 4, 411], [1, 5, 292], [2, 5, 430], [2, 5, 212], [2, 5, 454], [2, 5, 321], [1, 4, 293], [2, 5, 433], [2, 5, 324], [2, 5, 348], [2, 5, 457], [2, 5, 215], [2, 4, 238], [2, 4, 347], [2, 4, 214], [2, 5, 239], [2, 4, 456], [1, 4, 292], [2, 4, 323], [2, 4, 432], [2, 5, 300], [1, 5, 407], [2, 5, 214], [2, 5, 323], [2, 5, 456], [2, 5, 238], [1, 5, 409], [2, 4, 239], [2, 5, 347], [2, 4, 348], [2, 4, 215], [2, 4, 457], [2, 4, 324], [2, 4, 433], [1, 4, 291], [2, 4, 300], [1, 5, 290], [2, 5, 432], [1, 5, 408]]";
        Assert.assertEquals(strExpected, strActual);
    }
    public void testGetGroups013() {
        arrStr = new String[]{"1,2,3,4,5", "6,7,8,9,10"};
        arrActual = PortAlgorithm.getGroups(arrStr);
        strActual = Arrays.deepToString(arrActual);
        strExpected = "[[1, 8], [4, 7], [4, 9], [2, 6], [2, 8], [5, 8], [1, 10], [3, 9], [5, 6], [3, 7], [1, 6], [4, 10], [1, 9], [4, 8], [3, 10], [4, 6], [2, 7], [2, 9], [5, 10], [2, 10], [5, 9], [5, 7], [3, 8], [3, 6], [1, 7]]";
        Assert.assertEquals(strExpected, strActual);
    }
    public void testGetGroups014() {
        arrStr = new String[]{"1000-1010","8311-8320"};
        arrActual = PortAlgorithm.getGroups(arrStr);
        strActual = Arrays.deepToString(arrActual);
        strExpected = "[[1008, 8313], [1009, 8313], [1002, 8312], [1000, 8312], [1001, 8312], [1007, 8313], [1003, 8312], [1010, 8314], [1005, 8312], [1004, 8312], [1006, 8312], [1008, 8312], [1001, 8311], [1007, 8314], [1000, 8313], [1009, 8314], [1002, 8313], [1010, 8315], [1003, 8311], [1005, 8311], [1001, 8319], [1004, 8313], [1006, 8313], [1003, 8319], [1005, 8319], [1009, 8315], [1007, 8319], [1000, 8314], [1010, 8312], [1008, 8315], [1007, 8311], [1004, 8314], [1002, 8318], [1003, 8314], [1001, 8318], [1005, 8318], [1006, 8318], [1009, 8316], [1000, 8315], [1002, 8311], [1008, 8314], [1007, 8312], [1009, 8320], [1010, 8313], [1006, 8311], [1002, 8319], [1004, 8315], [1003, 8313], [1001, 8317], [1005, 8317], [1006, 8319], [1008, 8317], [1009, 8317], [1007, 8317], [1001, 8320], [1000, 8320], [1004, 8320], [1003, 8320], [1005, 8320], [1002, 8320], [1006, 8320], [1003, 8316], [1010, 8318], [1005, 8316], [1006, 8316], [1002, 8316], [1004, 8316], [1001, 8316], [1000, 8316], [1008, 8316], [1007, 8318], [1009, 8318], [1010, 8311], [1008, 8320], [1010, 8319], [1003, 8315], [1005, 8315], [1001, 8315], [1000, 8317], [1006, 8317], [1002, 8317], [1004, 8317], [1009, 8319], [1008, 8319], [1009, 8311], [1001, 8314], [1007, 8315], [1010, 8320], [1010, 8316], [1008, 8311], [1005, 8314], [1006, 8314], [1002, 8314], [1004, 8318], [1000, 8318], [1003, 8318], [1008, 8318], [1007, 8316], [1001, 8313], [1009, 8312], [1000, 8311], [1004, 8311], [1007, 8320], [1010, 8317], [1005, 8313], [1000, 8319], [1006, 8315], [1002, 8315], [1004, 8319], [1003, 8317]]";
        Assert.assertEquals(strExpected, strActual);
    }
    public void testGetGroups015() {
        arrStr = new String[]{"1,2","3,4","5,6","7,8","9-10","11,12","13,14","9-10","11,12"};
        arrActual = PortAlgorithm.getGroups(arrStr);
        strActual = Arrays.deepToString(arrActual);
        strExpected = "[[1, 4, 5, 7, 9, 12, 14, 10, 12], [1, 4, 5, 7, 10, 12, 14, 9, 12], [2, 4, 6, 8, 10, 12, 13, 9, 12], [1, 3, 5, 7, 10, 12, 13, 10, 11], [1, 4, 5, 7, 10, 11, 14, 9, 12], [1, 4, 6, 7, 10, 12, 13, 9, 11], [2, 4, 6, 8, 9, 11, 13, 9, 11], [2, 4, 6, 8, 10, 11, 13, 9, 12], [2, 4, 6, 8, 10, 11, 14, 10, 12], [1, 3, 5, 7, 9, 11, 13, 10, 12], [2, 4, 5, 8, 9, 11, 14, 10, 11], [1, 4, 6, 7, 10, 11, 13, 9, 11], [2, 4, 6, 7, 10, 11, 14, 10, 12], [1, 4, 5, 8, 9, 12, 13, 10, 12], [2, 4, 6, 7, 9, 11, 14, 9, 11], [2, 4, 6, 8, 9, 12, 13, 9, 11], [2, 3, 6, 7, 9, 12, 13, 9, 11], [1, 4, 6, 8, 9, 11, 14, 10, 12], [2, 3, 6, 7, 9, 11, 13, 9, 11], [2, 4, 6, 7, 9, 12, 14, 9, 11], [2, 4, 6, 8, 10, 11, 13, 9, 11], [2, 4, 6, 8, 10, 12, 13, 9, 11], [2, 4, 5, 8, 10, 11, 14, 9, 12], [1, 4, 5, 7, 10, 12, 14, 9, 11], [1, 3, 5, 8, 10, 12, 13, 10, 11], [1, 3, 5, 7, 10, 12, 13, 10, 12], [1, 4, 5, 7, 10, 11, 14, 9, 11], [2, 4, 6, 8, 9, 11, 13, 9, 12], [2, 4, 6, 8, 10, 11, 14, 10, 11], [1, 4, 5, 8, 9, 12, 13, 10, 11], [1, 4, 5, 8, 9, 11, 13, 10, 11], [2, 4, 5, 7, 10, 12, 13, 9, 11], [2, 4, 6, 8, 9, 12, 13, 9, 12], [2, 4, 5, 8, 10, 12, 14, 9, 12], [2, 3, 6, 7, 9, 11, 13, 9, 12], [2, 4, 5, 7, 10, 11, 13, 9, 11], [2, 3, 6, 7, 9, 12, 13, 9, 12], [1, 4, 6, 8, 10, 11, 13, 10, 12], [2, 4, 5, 8, 10, 11, 14, 9, 11], [1, 3, 5, 7, 10, 11, 13, 10, 11], [1, 4, 5, 7, 9, 11, 14, 10, 12], [1, 3, 5, 8, 10, 12, 13, 10, 12], [1, 3, 5, 7, 9, 12, 13, 10, 12], [2, 3, 6, 8, 10, 12, 13, 10, 11], [2, 4, 5, 8, 9, 12, 14, 10, 11], [1, 4, 5, 8, 10, 11, 14, 10, 11], [2, 4, 6, 8, 10, 12, 14, 10, 12], [1, 4, 6, 8, 10, 12, 14, 9, 12], [2, 3, 6, 7, 10, 12, 13, 10, 12], [1, 4, 5, 7, 10, 11, 14, 10, 12], [2, 3, 5, 8, 10, 12, 14, 9, 11], [1, 4, 6, 8, 10, 11, 14, 9, 12], [2, 3, 5, 8, 9, 11, 13, 10, 11], [2, 3, 5, 7, 10, 12, 14, 10, 11], [1, 4, 5, 8, 9, 11, 13, 10, 12], [2, 3, 5, 8, 9, 12, 14, 10, 11], [2, 4, 5, 7, 10, 12, 13, 9, 12], [2, 4, 5, 7, 10, 11, 13, 9, 12], [2, 4, 5, 8, 10, 12, 14, 9, 11], [1, 4, 5, 7, 9, 11, 14, 10, 11], [1, 3, 6, 8, 9, 11, 13, 9, 12], [1, 3, 6, 8, 9, 12, 13, 9, 12], [1, 4, 5, 8, 10, 11, 14, 10, 12], [2, 4, 5, 8, 9, 12, 14, 10, 12], [1, 3, 5, 7, 9, 12, 13, 10, 11], [2, 3, 5, 8, 9, 12, 14, 10, 12], [1, 3, 6, 7, 9, 11, 14, 10, 12], [2, 3, 5, 8, 9, 11, 13, 10, 12], [2, 3, 6, 7, 10, 12, 13, 10, 11], [2, 3, 5, 8, 10, 11, 14, 9, 11], [2, 4, 6, 7, 10, 11, 14, 10, 11], [2, 3, 5, 8, 10, 12, 13, 10, 12], [2, 4, 6, 7, 9, 11, 14, 9, 12], [2, 4, 6, 7, 9, 12, 14, 9, 12], [1, 4, 6, 8, 9, 11, 14, 10, 11], [1, 4, 5, 8, 10, 12, 14, 10, 11], [1, 3, 6, 7, 9, 11, 14, 9, 11], [2, 3, 5, 8, 9, 12, 13, 10, 11], [2, 3, 6, 7, 10, 11, 13, 10, 12], [1, 3, 6, 8, 9, 11, 14, 10, 11], [1, 3, 6, 8, 9, 11, 13, 9, 11], [2, 3, 6, 7, 10, 12, 13, 9, 11], [2, 3, 5, 7, 10, 11, 14, 9, 12], [1, 4, 6, 8, 9, 12, 14, 9, 11], [1, 3, 5, 8, 9, 12, 13, 9, 11], [2, 3, 5, 7, 10, 11, 14, 10, 11], [2, 3, 5, 8, 10, 11, 14, 9, 12], [2, 3, 6, 8, 10, 12, 13, 9, 11], [1, 3, 6, 7, 10, 11, 14, 9, 12], [1, 3, 6, 7, 9, 11, 14, 10, 11], [1, 3, 5, 7, 10, 12, 14, 9, 11], [2, 3, 5, 8, 9, 11, 14, 10, 11], [1, 4, 6, 7, 10, 11, 14, 10, 11], [1, 3, 5, 8, 9, 12, 13, 10, 11], [1, 4, 6, 8, 10, 12, 13, 10, 11], [1, 4, 5, 8, 9, 12, 14, 9, 11], [1, 3, 5, 7, 9, 11, 14, 9, 11], [2, 3, 5, 7, 10, 12, 13, 10, 12], [1, 3, 6, 7, 9, 11, 14, 9, 12], [1, 3, 5, 7, 10, 11, 13, 10, 12], [2, 3, 5, 8, 9, 12, 13, 9, 11], [2, 3, 5, 7, 10, 11, 13, 9, 11], [1, 4, 6, 8, 10, 11, 14, 9, 11], [2, 4, 6, 8, 10, 12, 14, 10, 11], [2, 3, 6, 7, 10, 12, 13, 9, 12], [1, 4, 6, 8, 9, 12, 14, 9, 12], [2, 3, 5, 7, 10, 12, 14, 10, 12], [1, 4, 5, 8, 9, 12, 14, 9, 12], [2, 3, 5, 7, 10, 11, 14, 10, 12], [1, 3, 6, 7, 10, 12, 13, 9, 11], [2, 3, 6, 8, 10, 12, 13, 9, 12], [1, 3, 5, 7, 10, 12, 14, 9, 12], [1, 4, 5, 7, 9, 11, 13, 10, 12], [1, 4, 6, 8, 10, 12, 13, 10, 12], [2, 3, 5, 7, 10, 12, 13, 10, 11], [1, 3, 5, 8, 9, 11, 14, 9, 12], [1, 3, 6, 8, 10, 11, 14, 9, 12], [2, 3, 5, 7, 9, 11, 14, 10, 11], [1, 3, 5, 8, 9, 12, 13, 10, 12], [1, 3, 5, 7, 9, 11, 14, 9, 12], [2, 3, 5, 8, 9, 12, 13, 9, 12], [2, 3, 5, 7, 9, 11, 14, 10, 12], [1, 3, 5, 8, 9, 11, 13, 10, 11], [1, 3, 6, 8, 9, 12, 14, 10, 11], [2, 4, 5, 8, 9, 12, 14, 9, 12], [1, 3, 6, 7, 9, 12, 14, 10, 11], [2, 3, 5, 7, 9, 11, 14, 9, 12], [2, 4, 5, 7, 9, 11, 14, 10, 12], [1, 3, 5, 8, 9, 11, 14, 9, 11], [1, 3, 6, 7, 10, 12, 13, 9, 12], [2, 3, 5, 8, 10, 11, 13, 10, 11], [1, 4, 6, 7, 10, 12, 14, 10, 11], [1, 4, 5, 7, 9, 11, 13, 10, 11], [1, 4, 6, 8, 9, 12, 14, 10, 12], [1, 4, 6, 8, 10, 11, 13, 10, 11], [1, 3, 6, 8, 10, 11, 14, 9, 11], [1, 4, 5, 8, 10, 12, 14, 10, 12], [1, 4, 6, 7, 10, 12, 13, 9, 12], [2, 4, 5, 8, 9, 11, 14, 10, 12], [2, 4, 5, 7, 9, 12, 14, 9, 11], [1, 3, 5, 7, 9, 11, 13, 10, 11], [1, 4, 5, 7, 9, 11, 13, 9, 12], [2, 3, 5, 8, 9, 12, 13, 10, 12], [1, 4, 6, 8, 10, 12, 13, 9, 11], [2, 4, 5, 8, 9, 12, 14, 9, 11], [2, 3, 5, 7, 9, 11, 14, 9, 11], [1, 3, 6, 7, 9, 12, 14, 10, 12], [2, 3, 6, 7, 10, 11, 13, 10, 11], [1, 3, 6, 7, 10, 11, 14, 9, 11], [1, 3, 6, 8, 9, 12, 14, 10, 12], [2, 3, 5, 8, 9, 11, 14, 10, 12], [2, 3, 5, 8, 10, 11, 13, 10, 12], [1, 4, 6, 8, 9, 12, 14, 10, 11], [1, 3, 5, 8, 9, 12, 13, 9, 12], [1, 4, 6, 7, 10, 12, 14, 10, 12], [1, 4, 6, 7, 9, 11, 14, 10, 11], [2, 4, 5, 8, 9, 12, 13, 9, 12], [1, 4, 5, 7, 9, 12, 13, 9, 11], [2, 4, 5, 7, 9, 11, 14, 9, 12], [1, 4, 5, 8, 10, 11, 13, 10, 12], [2, 3, 5, 7, 9, 11, 13, 9, 12], [2, 3, 5, 7, 9, 12, 13, 9, 12], [1, 4, 6, 8, 9, 11, 13, 10, 11], [1, 4, 6, 8, 10, 11, 13, 9, 11], [2, 4, 5, 7, 9, 12, 14, 10, 12], [1, 3, 6, 8, 10, 12, 13, 10, 11], [1, 3, 5, 8, 10, 12, 14, 10, 11], [2, 4, 5, 7, 10, 12, 14, 9, 12], [1, 3, 6, 7, 10, 12, 13, 10, 12], [1, 3, 5, 7, 10, 12, 14, 10, 12], [2, 4, 6, 7, 10, 12, 13, 9, 11], [1, 3, 5, 8, 9, 11, 13, 10, 12], [2, 4, 5, 8, 9, 12, 13, 9, 11], [2, 3, 6, 8, 9, 12, 14, 10, 11], [2, 3, 5, 7, 9, 11, 13, 9, 11], [2, 3, 5, 7, 9, 12, 13, 9, 11], [2, 4, 5, 7, 9, 12, 14, 10, 11], [2, 4, 5, 7, 9, 11, 14, 10, 11], [1, 4, 6, 8, 9, 12, 13, 10, 12], [1, 4, 6, 8, 9, 11, 13, 10, 12], [1, 3, 5, 8, 10, 12, 14, 10, 12], [1, 3, 6, 7, 10, 11, 13, 10, 11], [1, 3, 6, 7, 10, 12, 13, 10, 11], [2, 4, 6, 7, 10, 12, 13, 9, 12], [2, 4, 6, 7, 10, 12, 13, 10, 12], [1, 4, 6, 8, 9, 11, 13, 9, 11], [2, 3, 6, 8, 9, 12, 14, 10, 12], [1, 4, 5, 8, 10, 12, 13, 10, 12], [1, 4, 5, 8, 10, 11, 14, 9, 11], [2, 3, 6, 7, 9, 12, 14, 9, 11], [1, 4, 6, 8, 9, 12, 13, 10, 11], [2, 4, 6, 8, 10, 11, 14, 9, 12], [2, 4, 6, 7, 10, 12, 13, 10, 11], [2, 4, 6, 8, 10, 12, 14, 9, 12], [1, 4, 6, 7, 9, 11, 14, 10, 12], [1, 4, 6, 7, 10, 12, 13, 10, 11], [1, 4, 6, 8, 9, 11, 13, 9, 12], [2, 3, 5, 7, 10, 11, 14, 9, 11], [1, 4, 5, 8, 10, 12, 13, 10, 11], [1, 3, 6, 8, 9, 11, 14, 10, 12], [1, 4, 5, 8, 10, 11, 14, 9, 12], [1, 3, 6, 8, 10, 12, 13, 10, 12], [2, 4, 5, 7, 10, 12, 14, 9, 11], [2, 3, 6, 7, 9, 12, 14, 9, 12], [1, 3, 6, 7, 9, 12, 13, 10, 12], [2, 3, 6, 8, 10, 11, 14, 10, 11], [2, 4, 6, 8, 10, 12, 14, 9, 11], [2, 4, 6, 8, 10, 11, 14, 9, 11], [1, 3, 5, 7, 10, 12, 14, 10, 11], [1, 3, 6, 8, 9, 12, 13, 9, 11], [2, 3, 6, 8, 9, 11, 14, 10, 12], [1, 4, 6, 7, 10, 12, 13, 10, 12], [1, 3, 5, 8, 9, 12, 14, 10, 12], [2, 3, 6, 7, 10, 11, 13, 9, 11], [2, 3, 6, 7, 9, 12, 13, 10, 12], [1, 4, 6, 8, 9, 11, 14, 9, 11], [1, 4, 5, 7, 10, 12, 14, 10, 12], [1, 3, 6, 7, 10, 12, 14, 9, 12], [2, 3, 6, 8, 9, 11, 14, 9, 11], [1, 3, 5, 8, 9, 11, 13, 9, 11], [1, 3, 5, 7, 10, 11, 14, 9, 11], [1, 4, 5, 8, 9, 11, 14, 9, 11], [2, 3, 5, 8, 10, 12, 13, 10, 11], [2, 3, 6, 8, 10, 11, 14, 10, 12], [1, 3, 5, 8, 10, 11, 13, 10, 12], [1, 4, 6, 8, 9, 11, 14, 9, 12], [2, 4, 6, 7, 9, 11, 13, 9, 12], [1, 3, 6, 8, 9, 12, 14, 9, 12], [1, 4, 6, 8, 10, 12, 14, 9, 11], [1, 4, 5, 7, 10, 11, 14, 10, 11], [2, 3, 6, 7, 9, 12, 13, 10, 11], [2, 3, 6, 7, 10, 11, 13, 9, 12], [2, 3, 5, 8, 10, 12, 14, 9, 12], [1, 4, 5, 7, 10, 12, 14, 10, 11], [2, 3, 5, 8, 10, 12, 13, 9, 11], [1, 3, 5, 7, 10, 11, 14, 9, 12], [1, 3, 5, 8, 9, 12, 14, 9, 12], [1, 4, 5, 8, 9, 11, 14, 9, 12], [2, 3, 6, 7, 9, 11, 13, 10, 11], [2, 3, 6, 8, 9, 11, 14, 10, 11], [2, 3, 5, 7, 10, 11, 13, 10, 11], [1, 3, 5, 8, 10, 11, 13, 10, 11], [1, 3, 6, 7, 10, 11, 13, 9, 11], [2, 3, 5, 7, 9, 12, 14, 9, 12], [1, 4, 6, 7, 10, 11, 13, 10, 12], [1, 3, 5, 8, 10, 12, 13, 9, 12], [2, 4, 6, 7, 9, 11, 13, 9, 11], [1, 3, 6, 7, 9, 11, 13, 10, 11], [2, 4, 5, 7, 10, 11, 13, 10, 12], [1, 4, 5, 7, 10, 12, 13, 9, 12], [1, 3, 6, 7, 10, 11, 13, 10, 12], [1, 3, 5, 8, 9, 12, 14, 9, 11], [1, 3, 5, 7, 10, 11, 14, 10, 12], [2, 3, 5, 7, 10, 11, 13, 10, 12], [1, 3, 6, 7, 10, 11, 13, 9, 12], [2, 4, 6, 8, 9, 12, 13, 10, 11], [1, 3, 5, 8, 10, 12, 13, 9, 11], [1, 4, 5, 7, 9, 12, 14, 10, 11], [2, 3, 5, 7, 9, 12, 14, 9, 11], [1, 4, 6, 7, 10, 11, 13, 10, 11], [1, 4, 5, 7, 9, 12, 13, 9, 12], [1, 4, 5, 7, 10, 12, 13, 9, 11], [1, 3, 6, 7, 9, 11, 13, 10, 12], [1, 3, 5, 8, 9, 12, 14, 10, 11], [2, 4, 5, 7, 9, 11, 14, 9, 11], [2, 4, 5, 7, 10, 11, 13, 10, 11], [1, 4, 5, 8, 10, 11, 13, 10, 11], [1, 3, 6, 7, 10, 12, 14, 9, 11], [1, 4, 6, 8, 10, 11, 13, 9, 12], [1, 3, 5, 8, 9, 11, 13, 9, 12], [1, 3, 5, 7, 10, 11, 14, 10, 11], [2, 4, 6, 8, 9, 12, 13, 10, 12], [2, 4, 5, 7, 9, 12, 13, 10, 11], [2, 4, 6, 8, 9, 11, 13, 10, 11], [2, 4, 5, 8, 10, 12, 13, 10, 11], [1, 3, 6, 8, 10, 11, 14, 10, 11], [1, 3, 6, 7, 10, 11, 14, 10, 12], [1, 4, 6, 7, 9, 12, 13, 9, 11], [2, 4, 6, 7, 9, 11, 14, 10, 12], [1, 4, 5, 8, 10, 12, 13, 9, 11], [2, 4, 5, 7, 10, 12, 13, 10, 12], [1, 4, 6, 7, 9, 12, 13, 10, 12], [2, 4, 5, 8, 10, 12, 13, 10, 12], [1, 3, 6, 7, 10, 11, 14, 10, 11], [1, 4, 5, 8, 10, 12, 13, 9, 12], [2, 4, 6, 7, 9, 12, 14, 10, 12], [2, 4, 6, 7, 9, 11, 14, 10, 11], [1, 4, 6, 7, 9, 11, 13, 9, 11], [1, 4, 5, 7, 9, 11, 14, 9, 12], [1, 4, 5, 7, 9, 12, 14, 9, 12], [1, 3, 6, 8, 9, 11, 14, 9, 11], [1, 3, 6, 8, 9, 12, 14, 9, 11], [2, 3, 6, 7, 10, 12, 14, 9, 11], [2, 4, 5, 7, 9, 11, 13, 10, 11], [2, 3, 6, 7, 9, 11, 13, 10, 12], [1, 3, 5, 8, 9, 11, 14, 10, 12], [2, 3, 6, 7, 10, 11, 14, 9, 11], [2, 3, 5, 8, 10, 12, 13, 9, 12], [2, 3, 5, 8, 10, 11, 13, 9, 12], [2, 4, 5, 7, 9, 11, 13, 9, 11], [2, 4, 5, 7, 9, 12, 13, 9, 11], [2, 4, 6, 7, 10, 12, 14, 9, 11], [1, 4, 6, 7, 9, 11, 13, 9, 12], [2, 4, 6, 7, 10, 11, 14, 9, 11], [2, 4, 6, 8, 9, 11, 13, 10, 12], [2, 3, 6, 7, 10, 12, 14, 9, 12], [2, 4, 5, 7, 9, 11, 13, 10, 12], [1, 3, 6, 8, 10, 11, 14, 10, 12], [1, 3, 5, 8, 9, 11, 14, 10, 11], [1, 4, 6, 7, 9, 12, 13, 9, 12], [2, 3, 6, 7, 10, 11, 14, 9, 12], [2, 4, 5, 7, 10, 12, 13, 10, 11], [2, 3, 6, 8, 9, 11, 14, 9, 12], [2, 3, 6, 8, 9, 12, 14, 9, 12], [2, 4, 6, 7, 10, 12, 14, 9, 12], [1, 4, 6, 7, 9, 12, 13, 10, 11], [2, 4, 6, 7, 10, 11, 14, 9, 12], [2, 3, 5, 8, 9, 11, 14, 9, 12], [1, 3, 6, 7, 9, 12, 13, 10, 11], [2, 3, 5, 7, 9, 12, 13, 10, 11], [2, 3, 6, 8, 9, 12, 14, 9, 11], [1, 3, 5, 8, 10, 12, 14, 9, 12], [1, 3, 6, 8, 10, 12, 13, 9, 11], [2, 3, 6, 7, 9, 12, 14, 10, 12], [1, 3, 6, 8, 9, 11, 14, 9, 12], [2, 4, 5, 8, 10, 11, 13, 10, 12], [2, 4, 6, 8, 9, 12, 14, 10, 11], [1, 3, 6, 7, 10, 12, 14, 10, 11], [1, 3, 5, 8, 10, 11, 14, 10, 12], [2, 3, 5, 8, 10, 11, 13, 9, 11], [2, 4, 6, 7, 9, 12, 13, 9, 12], [2, 4, 5, 7, 9, 11, 13, 9, 12], [1, 3, 5, 8, 10, 12, 14, 9, 11], [1, 3, 5, 8, 10, 11, 13, 9, 12], [2, 4, 5, 7, 10, 12, 14, 10, 11], [1, 4, 6, 7, 9, 12, 14, 10, 11], [2, 3, 6, 7, 9, 12, 14, 10, 11], [2, 4, 5, 8, 10, 11, 13, 10, 11], [1, 4, 6, 7, 10, 11, 14, 9, 11], [1, 4, 5, 8, 9, 11, 13, 9, 11], [1, 4, 5, 7, 10, 11, 13, 9, 12], [1, 3, 6, 7, 10, 12, 14, 10, 12], [1, 3, 6, 8, 10, 11, 13, 10, 12], [1, 4, 5, 8, 10, 11, 13, 9, 12], [2, 4, 6, 7, 9, 12, 14, 10, 11], [1, 3, 5, 8, 10, 11, 14, 10, 11], [2, 4, 6, 7, 9, 12, 13, 9, 11], [1, 4, 5, 7, 9, 12, 14, 9, 11], [2, 3, 6, 8, 10, 12, 14, 10, 12], [1, 3, 5, 7, 10, 11, 13, 9, 11], [1, 3, 5, 7, 9, 12, 13, 9, 11], [2, 3, 6, 8, 9, 11, 13, 9, 11], [2, 3, 5, 8, 9, 11, 14, 9, 11], [1, 3, 5, 8, 10, 11, 13, 9, 11], [2, 4, 5, 7, 9, 12, 13, 10, 12], [2, 4, 5, 7, 10, 12, 14, 10, 12], [1, 4, 5, 7, 10, 11, 13, 9, 11], [1, 4, 5, 8, 9, 11, 13, 9, 12], [1, 3, 6, 8, 10, 11, 13, 10, 11], [2, 3, 5, 7, 9, 12, 13, 10, 12], [1, 4, 5, 8, 10, 11, 13, 9, 11], [1, 3, 5, 7, 10, 11, 13, 9, 12], [1, 4, 6, 7, 9, 12, 14, 10, 12], [1, 3, 6, 8, 10, 12, 13, 9, 12], [2, 4, 5, 8, 9, 12, 13, 10, 11], [1, 3, 5, 7, 9, 12, 13, 9, 12], [2, 3, 6, 8, 10, 12, 14, 10, 11], [2, 4, 5, 7, 10, 11, 14, 10, 11], [2, 3, 6, 7, 10, 12, 14, 10, 11], [2, 4, 5, 8, 10, 12, 13, 9, 11], [2, 4, 5, 8, 10, 11, 13, 9, 11], [2, 4, 6, 8, 9, 11, 14, 10, 12], [2, 4, 5, 7, 9, 12, 14, 9, 12], [1, 4, 5, 7, 9, 11, 13, 9, 11], [1, 4, 6, 8, 10, 12, 13, 9, 12], [1, 4, 5, 7, 10, 11, 13, 10, 12], [2, 4, 6, 8, 10, 12, 13, 10, 12], [1, 4, 5, 7, 9, 12, 13, 10, 11], [2, 4, 5, 8, 10, 12, 14, 10, 12], [2, 4, 6, 7, 10, 11, 13, 9, 11], [1, 4, 5, 8, 9, 11, 14, 10, 11], [2, 4, 5, 8, 9, 11, 13, 9, 11], [2, 4, 6, 7, 10, 11, 13, 10, 11], [2, 4, 5, 7, 10, 11, 14, 9, 12], [2, 4, 6, 7, 9, 12, 13, 10, 12], [2, 4, 5, 8, 9, 12, 13, 10, 12], [1, 4, 6, 7, 10, 12, 14, 9, 12], [2, 4, 6, 7, 9, 12, 13, 10, 11], [2, 4, 6, 7, 9, 11, 13, 10, 11], [1, 4, 6, 7, 10, 11, 14, 9, 12], [2, 4, 6, 8, 9, 11, 14, 10, 11], [1, 4, 6, 7, 9, 11, 14, 9, 12], [1, 4, 6, 7, 9, 12, 14, 9, 12], [2, 3, 6, 8, 9, 12, 13, 9, 12], [1, 4, 5, 7, 10, 11, 13, 10, 11], [2, 4, 6, 8, 10, 12, 13, 10, 11], [2, 4, 6, 8, 10, 11, 13, 10, 11], [1, 4, 5, 7, 9, 12, 13, 10, 12], [2, 4, 5, 8, 9, 11, 13, 9, 12], [1, 4, 5, 8, 9, 12, 14, 10, 12], [2, 4, 6, 7, 10, 11, 13, 10, 12], [2, 4, 6, 7, 10, 11, 13, 9, 12], [1, 4, 5, 8, 9, 11, 14, 10, 12], [2, 3, 6, 8, 9, 11, 13, 9, 12], [2, 3, 6, 7, 10, 11, 14, 10, 11], [2, 4, 6, 7, 9, 11, 13, 10, 12], [2, 3, 5, 7, 10, 12, 13, 9, 12], [2, 3, 5, 7, 10, 11, 13, 9, 12], [1, 4, 6, 7, 9, 11, 14, 9, 11], [1, 4, 6, 8, 9, 12, 13, 9, 11], [1, 3, 6, 7, 9, 11, 13, 9, 11], [1, 3, 6, 7, 9, 12, 13, 9, 11], [2, 3, 6, 8, 10, 12, 14, 9, 12], [2, 3, 6, 8, 9, 11, 13, 10, 12], [1, 4, 6, 7, 9, 12, 14, 9, 11], [1, 3, 5, 7, 9, 11, 14, 10, 12], [1, 4, 5, 7, 10, 12, 13, 10, 12], [2, 3, 6, 7, 9, 11, 14, 9, 11], [2, 3, 6, 8, 10, 11, 14, 9, 11], [1, 4, 5, 8, 10, 12, 14, 9, 11], [2, 3, 5, 7, 9, 11, 13, 10, 11], [2, 4, 6, 8, 10, 11, 13, 10, 12], [1, 4, 6, 8, 10, 11, 14, 10, 12], [2, 4, 6, 8, 9, 12, 14, 10, 12], [2, 4, 5, 8, 9, 11, 13, 10, 12], [2, 4, 6, 8, 9, 12, 14, 9, 11], [2, 4, 6, 8, 9, 11, 14, 9, 11], [2, 4, 5, 8, 10, 11, 14, 10, 12], [2, 3, 6, 7, 10, 11, 14, 10, 12], [2, 4, 5, 8, 10, 12, 13, 9, 12], [1, 3, 6, 8, 9, 12, 13, 10, 11], [2, 4, 5, 7, 10, 11, 14, 10, 12], [1, 4, 6, 8, 9, 12, 13, 9, 12], [2, 3, 5, 7, 10, 12, 14, 9, 11], [2, 4, 5, 8, 10, 11, 13, 9, 12], [1, 4, 5, 8, 10, 12, 14, 9, 12], [1, 3, 6, 7, 9, 11, 13, 9, 12], [1, 3, 6, 7, 9, 12, 13, 9, 12], [2, 3, 6, 8, 10, 12, 14, 9, 11], [2, 3, 5, 8, 10, 11, 14, 10, 12], [1, 3, 5, 7, 9, 11, 14, 10, 11], [1, 4, 6, 8, 10, 11, 14, 10, 11], [2, 3, 6, 7, 9, 11, 14, 9, 12], [2, 3, 5, 7, 9, 11, 13, 10, 12], [2, 3, 6, 8, 10, 11, 14, 9, 12], [2, 4, 5, 8, 10, 11, 14, 10, 11], [1, 4, 6, 7, 10, 11, 14, 10, 12], [2, 4, 5, 7, 10, 11, 14, 9, 11], [2, 4, 6, 8, 9, 11, 14, 9, 12], [2, 4, 5, 8, 9, 11, 13, 10, 11], [2, 4, 6, 8, 9, 12, 14, 9, 12], [1, 3, 6, 8, 9, 12, 13, 10, 12], [2, 3, 6, 7, 9, 11, 14, 10, 11], [1, 3, 6, 8, 10, 11, 13, 9, 11], [2, 3, 5, 7, 9, 12, 14, 10, 12], [2, 3, 5, 7, 10, 12, 14, 9, 12], [2, 3, 5, 8, 9, 12, 14, 9, 12], [2, 3, 6, 8, 10, 11, 13, 10, 11], [1, 3, 6, 7, 9, 12, 14, 9, 11], [2, 3, 5, 8, 10, 11, 14, 10, 11], [1, 3, 5, 7, 9, 12, 14, 10, 11], [1, 4, 6, 8, 10, 12, 14, 10, 12], [1, 3, 5, 7, 9, 12, 14, 9, 11], [2, 3, 6, 8, 10, 11, 13, 9, 11], [2, 3, 6, 8, 9, 12, 13, 10, 12], [1, 3, 5, 8, 10, 11, 14, 9, 12], [2, 3, 6, 7, 9, 11, 14, 10, 12], [2, 3, 5, 7, 9, 12, 14, 10, 11], [2, 3, 6, 8, 10, 11, 13, 10, 12], [2, 3, 6, 8, 10, 12, 13, 10, 12], [1, 3, 6, 7, 9, 12, 14, 9, 12], [2, 3, 5, 8, 9, 11, 13, 9, 11], [2, 3, 6, 8, 9, 12, 13, 10, 11], [2, 3, 6, 8, 9, 11, 13, 10, 11], [2, 3, 5, 7, 10, 12, 13, 9, 11], [2, 3, 6, 8, 10, 11, 13, 9, 12], [1, 3, 5, 7, 9, 12, 14, 9, 12], [1, 4, 5, 7, 10, 12, 13, 10, 11], [2, 4, 5, 7, 9, 12, 13, 9, 12], [1, 3, 6, 8, 10, 12, 14, 9, 12], [1, 3, 5, 8, 10, 11, 14, 9, 11], [1, 3, 6, 8, 9, 11, 13, 10, 12], [2, 3, 5, 8, 9, 11, 13, 9, 12], [1, 4, 6, 7, 10, 12, 14, 9, 11], [1, 3, 6, 8, 10, 12, 14, 10, 11], [2, 4, 5, 8, 9, 11, 14, 9, 12], [2, 3, 5, 8, 10, 12, 14, 10, 11], [2, 4, 6, 7, 10, 12, 14, 10, 12], [2, 3, 6, 8, 9, 12, 13, 9, 11], [1, 4, 5, 8, 9, 12, 13, 9, 11], [1, 4, 5, 7, 9, 11, 14, 9, 11], [1, 3, 5, 7, 9, 11, 13, 9, 11], [1, 3, 6, 8, 10, 12, 14, 9, 11], [1, 4, 6, 7, 9, 11, 13, 10, 12], [1, 4, 5, 8, 9, 12, 14, 10, 11], [1, 3, 5, 7, 10, 12, 13, 9, 11], [1, 3, 6, 8, 9, 11, 13, 10, 11], [2, 3, 6, 7, 10, 12, 14, 10, 12], [1, 3, 6, 8, 10, 12, 14, 10, 12], [1, 3, 6, 8, 10, 11, 13, 9, 12], [2, 3, 5, 8, 9, 12, 14, 9, 11], [2, 3, 5, 8, 10, 12, 14, 10, 12], [2, 4, 5, 8, 9, 11, 14, 9, 11], [1, 4, 6, 7, 10, 11, 13, 9, 12], [1, 3, 5, 7, 9, 12, 14, 10, 12], [2, 4, 6, 7, 10, 12, 14, 10, 11], [1, 4, 6, 8, 10, 12, 14, 10, 11], [1, 3, 5, 7, 9, 11, 13, 9, 12], [1, 4, 5, 8, 9, 12, 13, 9, 12], [1, 4, 6, 7, 9, 11, 13, 10, 11], [2, 4, 5, 8, 10, 12, 14, 10, 11], [1, 3, 5, 7, 10, 12, 13, 9, 12]]";
        Assert.assertEquals(strExpected, strActual);
    }
}